#version 400

out vec4 frag_colour;

float Ns = 250;
vec4 mat_specular=vec4(1); 
vec4 light_specular=vec4(1); 
const float PI = 3.1415926535897932384626433832795;

void main()
{
	vec3 lightDir = vec3(0.3,0.3,0.9);
	// calculate normal from texture coordinates
	vec3 N;
	N.xy = gl_PointCoord* 2.0 - vec2(1.0);    
	float mag = dot(N.xy, N.xy);
	if (mag > 1.0) discard;   // kill pixels outside circle
	N.z = sqrt(1.0-mag);
	// calculate lighting
	float diffuse = max(0.0, dot(lightDir, N));
	//vec3 eye = vec3 (0.0, 0.0, 1.0);
	//vec3 halfVector = normalize( eye + lightDir);
	//float spec = max( pow(dot(N,halfVector), Ns), 0.); 
	//vec4 S = light_specular*mat_specular* spec;
	frag_colour = vec4(0.0f, 0.6235f, 1.0f, 1.0f)*diffuse;
};